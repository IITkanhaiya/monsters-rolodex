{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAGaA,EAAM,SAAAC,GAAK,OACpB,sBAAKC,UAAU,iBAAf,UACA,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEC,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCPbC,EAAW,SAAAR,GAAK,OAExB,aADD,CACC,OAAMC,UAAU,YAAhB,SAA6BD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACpD,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJdM,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACpB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC8CjEG,E,kDA3Cb,aAAc,IAAD,8BACX,gBAgBFH,aAAa,SAACI,GAEb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAjBnCC,QAAQC,IAAR,gBACA,EAAKC,MAAQ,CACXf,SAAS,GACTU,YAAY,IALH,E,qDAsBb,WACC,IAAD,OACGM,MAAM,8CACNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACT,SAASoB,S,oBAEvC,WACE,MAA8BC,KAAKN,MAA5Bf,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXY,EAAiBtB,EAASuB,QAAO,SAAA5B,GAAO,OAAEA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYc,kBAChG,OACA,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAciB,KAAKjB,eAC5D,cAAC,EAAD,CAAUJ,SAAUsB,W,GApCRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9c68d1b.chunk.js","sourcesContent":["import react from \"react\";\nimport './card.style.css'\n\nexport const Card =props=>(\n    <div className='card-container'> \n    <img\n    alt='mpnster'\n    src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n    />\n        <h1>{props.monster.name}</h1>\n        <p>{props.monster.email}</p>\n        </div>\n);","import react from \"react\";\nimport './card-list.style.css'\nimport {Card} from '../card/card.component'\nexport const CardList = props=>(\n    //console.log(props);\n     <div  className='card-list'>{props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster}/>\n        ))}</div>\n);","import react from \"react\";\nimport './search-box.style.css';\nexport const SearchBox =({placeholder,handleChange})=>(\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange}/>\n)","import React, {Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport {CardList} from './component/card-list/card-list.component';\nimport {SearchBox} from './component/search-box/search-box.component'\nclass App extends Component {\n  constructor(){\n    super();\n    console.log(this);\n    this.state = {\n      monsters:[],\n      searchField:''\n      \n\n    };\n    //this.handleChange=this.handleChange.bind(this);\"homepage\": \"https://IITkanhaiya.github.io/monsters-rolodex\",\"predeploy\": \"npm build\",\n    //\"deploy\": \"gh-pages -d build\"\n  }\n  // handleChange(e)\n  // {\n  //  this.setState({searchField:e.target.value})\n  //  //console.log(this);\n  // }\n  handleChange=(e)=>\n  {\n   this.setState({searchField:e.target.value})\n   //console.log(this);\n  }\n  componentDidMount()\n  {\n     fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n  render(){\n    const {monsters, searchField}=this.state;\n    const filteredMonsters=monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n    <div className='App'>\n      <h1>Monster Rolodex</h1>\n      <SearchBox placeholder='search monsters' handleChange={this.handleChange}/>\n      <CardList monsters={filteredMonsters}/>\n      \n    </div>\n  );\n}\n};\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}